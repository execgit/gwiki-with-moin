# this is a part of multiconfig.py - the stuff that changed recently:
    actions_excluded = [] # ['DeletePage', 'AttachFile', 'RenamePage']
    auth = [moin_cookie]
    cookie_domain = None # use '.domain.tld" for a farm with hosts in that domain
    cookie_path = None   # use '/wikifarm" for a farm with pathes below that path
    editor_default = 'text' # which editor is called when nothing is specified
    editor_ui = 'freechoice' # which editor links are shown on user interface
    editor_force = False
    hacks = {} # { 'feature1': value1, ... }
               # Configuration for features still in development.
               # For boolean stuff just use config like this:
               #   hacks = { 'feature': True, ...}
               # and in the code use:
               #   if cfg.hacks.get('feature', False): <doit>
               # A non-existing hack key should ever mean False, None, "", [] or {}!
    interwiki_preferred = [] # list of wiki names to show at top of interwiki list
    language_default = 'en'
    language_ignore_browser = False # ignore browser settings, use language_default
                                    # or user prefs
    lupy_search = False # disabled until lupy is finished
    mail_sendmail = None # "/usr/sbin/sendmail -t -i" to not use SMTP, but sendmail
    show_interwiki = True # show interwiki name (and link it to page_front_page)
    superuser = [] # list of unicode user names that have super powers :)
    user_email_unique = True # do we check whether a user's email is unique?

    user_checkbox_fields = [
        ('mailto_author', lambda _: _('Publish my email (not my wiki homepage) in author info')),
        ('edit_on_doubleclick', lambda _: _('Open editor on double click')),
        ('remember_last_visit', lambda _: _('Remember last page visited')),
        ('show_nonexist_qm', lambda _: _('Show question mark for non-existing pagelinks')),
        ('show_page_trail', lambda _: _('Show page trail')),
        ('show_toolbar', lambda _: _('Show icon toolbar')),
        ('show_topbottom', lambda _: _('Show top/bottom links in headings')),
        ('show_fancy_diff', lambda _: _('Show fancy diffs')),
        ('wikiname_add_spaces', lambda _: _('Add spaces to displayed wiki names')),
        ('remember_me', lambda _: _('Remember login information')),
        ('want_trivial', lambda _: _('Subscribe to trivial changes')),
        
        ('disabled', lambda _: _('Disable this account forever')),
        # if an account is disabled, it may be used for looking up
        # id -> username for page info and recent changes, but it
        # is not usable for the user any more:
    ]
    
    user_checkbox_defaults = {'mailto_author':       0,
                              'edit_on_doubleclick': 0,
                              'remember_last_visit': 0,
                              'show_nonexist_qm':    nonexist_qm,
                              'show_page_trail':     1,
                              'show_toolbar':        1,
                              'show_topbottom':      0,
                              'show_fancy_diff':     1,
                              'wikiname_add_spaces': 0,
                              'remember_me':         1,
                              'want_trivial':        0,
                             }
    # don't let the user change those
    # user_checkbox_disable = ['disabled', 'want_trivial']
    user_checkbox_disable = []
    # remove those checkboxes:
    user_checkbox_remove = ['edit_on_doubleclick', 'show_nonexist_qm', 'show_toolbar', 'show_topbottom',
                            'show_fancy_diff', 'wikiname_add_spaces', 'remember_me', 'disabled',]
    
    user_form_fields = [
        ('name', _('Name'), "text", "36", _("(Use Firstname''''''Lastname)")),
        ('aliasname', _('Alias-Name'), "text", "36", ''),
        ('password', _('Password'), "password", "36", ''),
        ('password2', _('Password repeat'), "password", "36", _('(Only when changing passwords)')),
        ('email', _('Email'), "text", "36", ''),
        ('css_url', _('User CSS URL'), "text", "40", _('(Leave it empty for disabling user CSS)')),
        ('edit_rows', _('Editor size'), "text", "3", ''),
        ##('theme', _('Preferred theme'), [self._theme_select()])
        ##('', _('Editor Preference'), [self._editor_default_select()])
        ##('', _('Editor shown on UI'), [self._editor_ui_select()])
        ##('', _('Time zone'), [self._tz_select()])
        ##('', _('Date format'), [self._dtfmt_select()])
        ##('', _('Preferred language'), [self._lang_select()])
    ]
    
    user_form_defaults = { # key: default
        'name': '',
        'aliasname': '',
        'password': '',
        'password2': '',
        'email': '',
        'css_url': '',
        'edit_rows': "20",
    }
    
    # don't let the user change those, but show them:
    user_form_disable = ['name', 'aliasname', 'email',]
    
    # remove those completely:
    user_form_remove = ['password', 'password2', 'css_url', 'logout', 'create', 'account_sendmail',]
    
    user_homewiki = 'Self' # interwiki name for where user homepages are located

